{"version":3,"sources":["Template.js","App.js","reportWebVitals.js","index.js"],"names":["Template","useState","city","setCity","search","setSearch","useEffect","a","url","axios","get","data","className","type","placeholder","onChange","event","target","value","icon","size","name","src","weather","main","temp","description","feels_like","temp_min","temp_max","humidity","wind","speed","library","add","faSearch","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAyEeA,MArEf,WACE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,UAArC,mBAAOG,EAAP,KAAeC,EAAf,KAWA,OATAC,qBAAU,WACR,sBAAC,gCAAAC,EAAA,6DACOC,EADP,4DACkEJ,EADlE,iEAEwBK,IAAMC,IAAIF,GAFlC,gBAESG,EAFT,EAESA,KAERR,EAAQQ,GAJT,0CAAD,KAMC,CAACP,IAGF,sBAAKQ,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBACEC,KAAK,SACLC,YAAY,YACZF,UAAU,eACVG,SAAU,SAACC,GACTX,EAAUW,EAAMC,OAAOC,UAG3B,cAAC,IAAD,CACEC,KAAK,SACLP,UAAU,mBACVQ,KAAK,YAGPlB,EAGA,sBAAKU,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,+BAAOV,EAAKmB,SAEd,sBAAKT,UAAU,iBAAf,UACE,qBACEU,IAAG,2CAAsCpB,EAAKqB,QAAQ,GAAGJ,KAAtD,WACHP,UAAU,eAEZ,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,aAAf,UACGV,EAAKsB,KAAKC,KACX,4CAEF,qBAAKb,UAAU,oBAAf,SACGV,EAAKqB,QAAQ,GAAGG,cAEnB,sBAAKd,UAAU,cAAf,0BACgBV,EAAKsB,KAAKG,WAD1B,WAGA,sBAAKf,UAAU,oBAAf,mBACSV,EAAKsB,KAAKI,SADnB,iBAC4C1B,EAAKsB,KAAKK,SADtD,WAIA,sBAAKjB,UAAU,cAAf,wBAAyCV,EAAKsB,KAAKM,YACnD,sBAAKlB,UAAU,cAAf,0BACgBV,EAAK6B,KAAKC,MAD1B,mBA3BN,kD,eC/BRC,IAAQC,IAAIC,KAUGC,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCGSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9430015.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction Template() {\n  const [city, setCity] = useState(null);\n  const [search, setSearch] = useState(\"Mumbai\");\n\n  useEffect(() => {\n    (async function () {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=e220ca9c309b96a540c24f7b1a72f851`;\n      const { data } = await axios.get(url);\n      //console.log(response.data);\n      setCity(data);\n    })();\n  }, [search]);\n\n  return (\n    <div className=\"main\">\n      <div className=\"main__input\">\n        <input\n          type=\"search\"\n          placeholder=\"City Name\"\n          className=\"main__search\"\n          onChange={(event) => {\n            setSearch(event.target.value);\n          }}\n        />\n        <FontAwesomeIcon\n          icon=\"search\"\n          className=\"main__searchicon\"\n          size=\"1.5x\"\n        />\n      </div>\n      {!city ? (\n        <p>No Data Found</p>\n      ) : (\n        <div className=\"main__info\">\n          <div className=\"main__city\">\n            <span>{city.name}</span>\n          </div>\n          <div className=\"main__tempinfo\">\n            <img\n              src={`http://openweathermap.org/img/wn/${city.weather[0].icon}@2x.png`}\n              className=\"main--icon\"\n            />\n            <div className=\"main--info\">\n              <div className=\"info--temp\">\n                {city.main.temp}\n                <span>&deg;C</span>\n              </div>\n              <div className=\"info--description\">\n                {city.weather[0].description}\n              </div>\n              <div className=\"info--feels\">\n                Feels like : {city.main.feels_like}&deg;C\n              </div>\n              <div className=\"info--temp_minmax\">\n                Min : {city.main.temp_min}&deg;C | Max : {city.main.temp_max}\n                &deg;C\n              </div>\n              <div className=\"info--humid\">Humidity : {city.main.humidity}</div>\n              <div className=\"info--speed\">\n                Wind Speed : {city.wind.speed} m/s\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Template;\n","import \"./App.css\";\nimport Template from \"./Template\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faSearch);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Template />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}